[{"/home/basil/The_List/frontend/src/index.js":"1","/home/basil/The_List/frontend/src/reportWebVitals.js":"2","/home/basil/The_List/frontend/src/App.js":"3","/home/basil/The_List/frontend/src/components/Header/Header.js":"4","/home/basil/The_List/frontend/src/components/Footer/Footer.js":"5","/home/basil/The_List/frontend/src/screens/LandingPage/LandingPage.js":"6","/home/basil/The_List/frontend/src/screens/MyLists/MyLists.js":"7","/home/basil/The_List/frontend/src/components/MainScreen.js":"8","/home/basil/The_List/frontend/src/screens/RegisterScreen/RegisterScreen.js":"9","/home/basil/The_List/frontend/src/screens/LoginScreen/LoginScreen.js":"10","/home/basil/The_List/frontend/src/components/Loading.js":"11","/home/basil/The_List/frontend/src/components/ErrorMessage.js":"12","/home/basil/The_List/frontend/src/store.js":"13","/home/basil/The_List/frontend/src/reducers/userReducers.js":"14","/home/basil/The_List/frontend/src/constants/userConstants.js":"15","/home/basil/The_List/frontend/src/actions/userActions.js":"16","/home/basil/The_List/frontend/src/reducers/listsReducers.js":"17","/home/basil/The_List/frontend/src/constants/listsConstants.js":"18","/home/basil/The_List/frontend/src/actions/listsActions.js":"19","/home/basil/The_List/frontend/src/screens/CreateList/CreateList.js":"20","/home/basil/The_List/frontend/src/screens/SingleList/SingleList.js":"21","/home/basil/The_List/frontend/src/screens/ProfileScreen/ProfileScreen.js":"22"},{"size":631,"mtime":1661457831032,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1660851258239,"results":"25","hashOfConfig":"24"},{"size":1350,"mtime":1661984601371,"results":"26","hashOfConfig":"24"},{"size":2260,"mtime":1661977456181,"results":"27","hashOfConfig":"24"},{"size":477,"mtime":1660854536561,"results":"28","hashOfConfig":"24"},{"size":1257,"mtime":1661980145266,"results":"29","hashOfConfig":"24"},{"size":4355,"mtime":1661984418502,"results":"30","hashOfConfig":"24"},{"size":551,"mtime":1660860197906,"results":"31","hashOfConfig":"24"},{"size":4697,"mtime":1661463184350,"results":"32","hashOfConfig":"24"},{"size":2148,"mtime":1661460501226,"results":"33","hashOfConfig":"24"},{"size":465,"mtime":1661283392166,"results":"34","hashOfConfig":"24"},{"size":292,"mtime":1661284678689,"results":"35","hashOfConfig":"24"},{"size":1003,"mtime":1661979413596,"results":"36","hashOfConfig":"24"},{"size":1413,"mtime":1661979391792,"results":"37","hashOfConfig":"24"},{"size":555,"mtime":1661979312764,"results":"38","hashOfConfig":"24"},{"size":2637,"mtime":1661979519804,"results":"39","hashOfConfig":"24"},{"size":1768,"mtime":1661813426155,"results":"40","hashOfConfig":"24"},{"size":687,"mtime":1661809468372,"results":"41","hashOfConfig":"24"},{"size":3483,"mtime":1661975410382,"results":"42","hashOfConfig":"24"},{"size":3156,"mtime":1661808819522,"results":"43","hashOfConfig":"24"},{"size":4031,"mtime":1661982443711,"results":"44","hashOfConfig":"24"},{"size":5468,"mtime":1661983316606,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"drwn08",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/home/basil/The_List/frontend/src/index.js",[],[],[],"/home/basil/The_List/frontend/src/reportWebVitals.js",[],[],"/home/basil/The_List/frontend/src/App.js",[],[],"/home/basil/The_List/frontend/src/components/Header/Header.js",[],[],"/home/basil/The_List/frontend/src/components/Footer/Footer.js",[],[],"/home/basil/The_List/frontend/src/screens/LandingPage/LandingPage.js",[],[],"/home/basil/The_List/frontend/src/screens/MyLists/MyLists.js",[],[],"/home/basil/The_List/frontend/src/components/MainScreen.js",[],[],"/home/basil/The_List/frontend/src/screens/RegisterScreen/RegisterScreen.js",[],[],"/home/basil/The_List/frontend/src/screens/LoginScreen/LoginScreen.js",[],[],"/home/basil/The_List/frontend/src/components/Loading.js",[],[],"/home/basil/The_List/frontend/src/components/ErrorMessage.js",[],[],"/home/basil/The_List/frontend/src/store.js",[],[],"/home/basil/The_List/frontend/src/reducers/userReducers.js",[],[],"/home/basil/The_List/frontend/src/constants/userConstants.js",[],[],"/home/basil/The_List/frontend/src/actions/userActions.js",[],[],"/home/basil/The_List/frontend/src/reducers/listsReducers.js",[],[],"/home/basil/The_List/frontend/src/constants/listsConstants.js",[],[],"/home/basil/The_List/frontend/src/actions/listsActions.js",[],[],"/home/basil/The_List/frontend/src/screens/CreateList/CreateList.js",[],[],"/home/basil/The_List/frontend/src/screens/SingleList/SingleList.js",[],[],"/home/basil/The_List/frontend/src/screens/ProfileScreen/ProfileScreen.js",["114"],[],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n//   const postDetails = (pics) => {\n//     if (\n//       pics ===\n//       \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n//     ) {\n//       return setPicMessage(\"Please Select an Image\");\n//     }\n//     setPicMessage(null);\n//     if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n//       const data = new FormData();\n//       data.append(\"file\", pics);\n//       data.append(\"upload_preset\", \"thelist\");\n//       data.append(\"cloud_name\", \"basilspice\");\n//       fetch(\"https://api.cloudinary.com/v1_1/basilspice/image/upload\", {\n//         method: \"post\",\n//         body: data,\n//       })\n//         .then((res) => res.json())\n//         .then((data) => {\n//           console.log(data);\n//           setPic(data.url.toString());\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//         });\n//     } else {\n//       return setPicMessage(\"Please Select an Image\");\n//     }\n//   };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n    return (\n        <MainScreen title=\"EDIT PROFILE\">\n        <div>\n            <>\n          <Row className=\"profileContainer\">\n            <Col md={6}>\n              <Form\n               onSubmit={submitHandler}\n            >\n                {loading && <Loading />}\n                {success && (\n                    <ErrorMessage variant=\"success\">\n                    Updated Successfully\n                  </ErrorMessage>\n                )}\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>{\" \"}\n                {picMessage && (\n                    <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n                    )}\n                <Form.Group controlId=\"pic\">\n                  <Form.Label>Change Profile Picture</Form.Label>\n                  <Form.Control\n                    // onChange={(e) => postDetails(e.target.files[0])}\n                    id=\"custom-file\"\n                    type=\"image/png\"\n                    label=\"Upload Profile Picture\"\n                    custom\n                    />\n                </Form.Group>\n                <Button type=\"submit\" varient=\"primary\">\n                  Update\n                </Button>\n              </Form>\n            </Col>\n            <Col\n              style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                >\n              <img src={pic} alt={name} className=\"profilePic\" />\n            </Col>\n          </Row>\n                </>\n        </div>\n      </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n",{"ruleId":"115","severity":1,"message":"116","line":16,"column":22,"nodeType":"117","messageId":"118","endLine":16,"endColumn":35},"no-unused-vars","'setPicMessage' is assigned a value but never used.","Identifier","unusedVar"]