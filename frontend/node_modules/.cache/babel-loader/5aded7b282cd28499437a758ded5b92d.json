{"ast":null,"code":"import { configure } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport { LISTS_LIST_FAIL, LISTS_LIST_REQUEST, LISTS_LIST_SUCCESS, LISTS_CREATE_FAIL, LISTS_CREATE_REQUEST, LISTS_CREATE_SUCCESS } from \"../constants/listsConstants\";\nexport const listLists = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LISTS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/lists`, config);\n    dispatch({\n      type: LISTS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: LISTS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createListAction = (title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LISTS_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/lists/create`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: LISTS_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.responnse.data.message : erro;\n    dispatch({\n      type: LISTS_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["configure","axios","LISTS_LIST_FAIL","LISTS_LIST_REQUEST","LISTS_LIST_SUCCESS","LISTS_CREATE_FAIL","LISTS_CREATE_REQUEST","LISTS_CREATE_SUCCESS","listLists","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createListAction","title","content","category","post","responnse","erro"],"sources":["/home/basil/The_List/frontend/src/actions/listsActions.js"],"sourcesContent":["import { configure } from \"@testing-library/react\";\nimport axios from \"axios\"\nimport { LISTS_LIST_FAIL, LISTS_LIST_REQUEST, LISTS_LIST_SUCCESS, LISTS_CREATE_FAIL, LISTS_CREATE_REQUEST, LISTS_CREATE_SUCCESS } from \"../constants/listsConstants\"\n\nexport const listLists = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: LISTS_LIST_REQUEST,\n        });\n        const {\n            userLogin: {userInfo},\n\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n\n        };\n\n        const {data} = await axios.get(`/api/lists`, config);\n\n        dispatch({\n            type: LISTS_LIST_SUCCESS,\n            payload: data\n        });\n\n\n\n    } catch (error) {\n        const message = \n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        dispatch({\n            type: LISTS_LIST_FAIL,\n            payload: message,\n        });\n    }\n}\n\nexport const createListAction = \n(title, content, category) => async (dispatch, getState) => {\n    try {\n        dispatch ({\n            type: LISTS_CREATE_REQUEST,\n        });\n    const {\n        userLogin: {userInfo },\n        \n    } = getState();\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${userInfo.token}`\n        }\n    };\n\n    const {data} = await axios.post(\n        `/api/lists/create`,\n        {title, content, category},\n        config\n    );\n\n    dispatch({\n        type: LISTS_CREATE_SUCCESS,\n        payload: data,\n    });\n\n    \n    } catch (error) {\n        const message = \n        error.response && error.response.data.message ?\n        error.responnse.data.message :\n        erro\n    dispatch ({\n        type: LISTS_CREATE_FAIL,\n        payload: message,\n    });\n    }\n\n\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,iBAAlE,EAAqFC,oBAArF,EAA2GC,oBAA3G,QAAuI,6BAAvI;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACzD,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAER;IADD,CAAD,CAAR;IAGA,MAAM;MACFS,SAAS,EAAE;QAACC;MAAD;IADT,IAGFH,QAAQ,EAHZ;IAKA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MADnC;IADE,CAAf;IAOA,MAAM;MAACC;IAAD,IAAS,MAAMjB,KAAK,CAACkB,GAAN,CAAW,YAAX,EAAwBL,MAAxB,CAArB;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAAEP,kBADD;MAELgB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAOH,CAzBD,CAyBE,OAAOG,KAAP,EAAc;IACZ,MAAMC,OAAO,GACbD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACED,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADtB,GAEED,KAAK,CAACC,OAHR;IAIAb,QAAQ,CAAC;MACLE,IAAI,EAAET,eADD;MAELkB,OAAO,EAAEE;IAFJ,CAAD,CAAR;EAIH;AACJ,CApCM;AAsCP,OAAO,MAAME,gBAAgB,GAC7B,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,KAA8B,OAAOlB,QAAP,EAAiBC,QAAjB,KAA8B;EACxD,IAAI;IACAD,QAAQ,CAAE;MACNE,IAAI,EAAEL;IADA,CAAF,CAAR;IAGJ,MAAM;MACFM,SAAS,EAAE;QAACC;MAAD;IADT,IAGFH,QAAQ,EAHZ;IAKA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAOA,MAAM;MAACC;IAAD,IAAS,MAAMjB,KAAK,CAAC2B,IAAN,CAChB,mBADgB,EAEjB;MAACH,KAAD;MAAQC,OAAR;MAAiBC;IAAjB,CAFiB,EAGjBb,MAHiB,CAArB;IAMAL,QAAQ,CAAC;MACLE,IAAI,EAAEJ,oBADD;MAELa,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAMC,CA5BD,CA4BE,OAAOG,KAAP,EAAc;IACZ,MAAMC,OAAO,GACbD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACAD,KAAK,CAACQ,SAAN,CAAgBX,IAAhB,CAAqBI,OADrB,GAEAQ,IAHA;IAIJrB,QAAQ,CAAE;MACNE,IAAI,EAAEN,iBADA;MAENe,OAAO,EAAEE;IAFH,CAAF,CAAR;EAIC;AAGJ,CA1CM"},"metadata":{},"sourceType":"module"}