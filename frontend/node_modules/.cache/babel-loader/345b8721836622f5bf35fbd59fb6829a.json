{"ast":null,"code":"import { configure } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport { LISTS_LIST_FAIL, LISTS_LIST_REQUEST, LISTS_LIST_SUCCESS, LISTS_CREATE_FAIL, LISTS_CREATE_REQUEST, LISTS_CREATE_SUCCESS } from \"../constants/listsConstants\";\nexport const listLists = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LISTS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/lists`, config);\n    dispatch({\n      type: LISTS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: LISTS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createListAction = (title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LISTS_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/lists/create`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: LISTS_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.responnse.data.message : error.message;\n    dispatch({\n      type: LISTS_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateListAction = (id, title, content, category) => async (dispatch, getState) => {};","map":{"version":3,"names":["configure","axios","LISTS_LIST_FAIL","LISTS_LIST_REQUEST","LISTS_LIST_SUCCESS","LISTS_CREATE_FAIL","LISTS_CREATE_REQUEST","LISTS_CREATE_SUCCESS","listLists","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createListAction","title","content","category","post","responnse","updateListAction","id"],"sources":["/home/basil/The_List/frontend/src/actions/listsActions.js"],"sourcesContent":["import { configure } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport {\n  LISTS_LIST_FAIL,\n  LISTS_LIST_REQUEST,\n  LISTS_LIST_SUCCESS,\n  LISTS_CREATE_FAIL,\n  LISTS_CREATE_REQUEST,\n  LISTS_CREATE_SUCCESS,\n} from \"../constants/listsConstants\";\n\nexport const listLists = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LISTS_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/lists`, config);\n\n    dispatch({\n      type: LISTS_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: LISTS_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createListAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: LISTS_CREATE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/lists/create`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: LISTS_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.responnse.data.message\n          : error.message;\n      dispatch({\n        type: LISTS_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\n\nexport const updateListAction = (id, title, content, category) => async (dispatch, getState) => {}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,oBALF,EAMEC,oBANF,QAOO,6BAPP;AASA,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAC3D,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAER;IADC,CAAD,CAAR;IAGA,MAAM;MACJS,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFH,QAAQ,EAFZ;IAIA,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MADjC;IADI,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAW,YAAX,EAAwBL,MAAxB,CAAvB;IAEAL,QAAQ,CAAC;MACPE,IAAI,EAAEP,kBADC;MAEPgB,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID,CApBD,CAoBE,OAAOG,KAAP,EAAc;IACd,MAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;IAIAb,QAAQ,CAAC;MACPE,IAAI,EAAET,eADC;MAEPkB,OAAO,EAAEE;IAFF,CAAD,CAAR;EAID;AACF,CA/BM;AAiCP,OAAO,MAAME,gBAAgB,GAC3B,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,KAA8B,OAAOlB,QAAP,EAAiBC,QAAjB,KAA8B;EAC1D,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAEL;IADC,CAAD,CAAR;IAGA,MAAM;MACJM,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFH,QAAQ,EAFZ;IAIA,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFjC;IADI,CAAf;IAOA,MAAM;MAAEC;IAAF,IAAW,MAAMjB,KAAK,CAAC2B,IAAN,CACpB,mBADoB,EAErB;MAAEH,KAAF;MAASC,OAAT;MAAkBC;IAAlB,CAFqB,EAGrBb,MAHqB,CAAvB;IAMAL,QAAQ,CAAC;MACPE,IAAI,EAAEJ,oBADC;MAEPa,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID,CAzBD,CAyBE,OAAOG,KAAP,EAAc;IACd,MAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACQ,SAAN,CAAgBX,IAAhB,CAAqBI,OADzB,GAEID,KAAK,CAACC,OAHZ;IAIAb,QAAQ,CAAC;MACPE,IAAI,EAAEN,iBADC;MAEPe,OAAO,EAAEE;IAFF,CAAD,CAAR;EAID;AACF,CArCI;AAwCP,OAAO,MAAMQ,gBAAgB,GAAG,CAACC,EAAD,EAAKN,KAAL,EAAYC,OAAZ,EAAqBC,QAArB,KAAkC,OAAOlB,QAAP,EAAiBC,QAAjB,KAA8B,CAAE,CAA3F"},"metadata":{},"sourceType":"module"}