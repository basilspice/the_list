{"ast":null,"code":"var _jsxFileName = \"/home/basil/The_List/frontend/src/screens/SingleList/SingleList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteListAction, updateListAction } from \"../../actions/listsActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleList(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const listUpdate = useSelector(state => state.listUpdate);\n  const {\n    loading,\n    error\n  } = listUpdate;\n  const listDelete = useSelector(state => state.listDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete\n  } = listDelete;\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteListAction(id));\n    }\n\n    history.push(\"/mylists\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const {\n        data\n      } = await axios.get(`/api/lists/${match.params.id}`);\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateListAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/mylists\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Edit List\",\n    children: \"HELLO ARE YOU WORKING\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleList, \"okoaa0S+oK4Fjnd5UhQut4xgzDE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SingleList;\nexport default SingleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleList\");","map":{"version":3,"names":["React","useEffect","useState","MainScreen","axios","Button","Card","Form","useDispatch","useSelector","deleteListAction","updateListAction","ErrorMessage","Loading","ReactMarkdown","SingleList","match","history","title","setTitle","content","setContent","category","setCategory","date","setDate","dispatch","listUpdate","state","loading","error","listDelete","loadingDelete","errorDelete","deleteHandler","id","window","confirm","push","fetching","data","get","params","updatedAt","resetHandler","updateHandler","e","preventDefault"],"sources":["/home/basil/The_List/frontend/src/screens/SingleList/SingleList.js"],"sourcesContent":["\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteListAction, updateListAction } from \"../../actions/listsActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleList({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const listUpdate = useSelector((state) => state.listUpdate);\n  const { loading, error } = listUpdate;\n\n  const listDelete = useSelector((state) => state.listDelete);\n  const { loading: loadingDelete, error: errorDelete } = listDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteListAction(id));\n    }\n    history.push(\"/mylists\");\n  };\n\n\n  \n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/lists/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateListAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mylists\");\n  };\n\n  return (\n    <MainScreen title=\"Edit List\">HELLO ARE YOU WORKING\n      {/* <Card>\n        <Card.Header>Edit your List</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>List Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update List\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete List\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card> */}\n    </MainScreen>\n  );\n}\n\nexport default SingleList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}