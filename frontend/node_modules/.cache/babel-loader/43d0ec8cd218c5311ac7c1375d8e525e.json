{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteListAction, updateListAction } from \"../../actions/listsActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkDown from \"react-markdown\";\n\nfunction SingleList(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const listUpdate = useSelector(state => state.listUpdate);\n  const {\n    loading,\n    error\n  } = listUpdate;\n  useEffect(() => {\n    const fetching = async () => {\n      const {\n        data\n      } = await axios.get(`/api/lists/${match.params.id}`);\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateListAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/mylists\");\n  };\n} // import React, { useEffect, useState } from \"react\";\n// import MainScreen from \"../../components/MainScreen\";\n// import axios from \"axios\";\n// import { Button, Card, Form } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { deleteListAction, updateListAction } from \"../../actions/listsActions\";\n// import ErrorMessage from \"../../components/ErrorMessage\";\n// import Loading from \"../../components/Loading\";\n// import ReactMarkdown from \"react-markdown\";\n// function SingleList({ match, history }) {\n//   const [title, setTitle] = useState();\n//   const [content, setContent] = useState();\n//   const [category, setCategory] = useState();\n//   const [date, setDate] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const listUpdate = useSelector((state) => state.listUpdate);\n//   const { loading, error } = listUpdate;\n//   const listDelete = useSelector((state) => state.listDelete);\n//   const { loading: loadingDelete, error: errorDelete } = listDelete;\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure?\")) {\n//       dispatch(deleteListAction(id));\n//     }\n//     history.push(\"/mylists\");\n//   };\n//   useEffect(() => {\n//     const fetching = async () => {\n//       const { data } = await axios.get(`/api/lists/${match.params.id}`);\n//       setTitle(data.title);\n//       setContent(data.content);\n//       setCategory(data.category);\n//       setDate(data.updatedAt);\n//     };\n//     fetching();\n//   }, [match.params.id, date]);\n//   const resetHandler = () => {\n//     setTitle(\"\");\n//     setCategory(\"\");\n//     setContent(\"\");\n//   };\n//   const updateHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(updateListAction(match.params.id, title, content, category));\n//     if (!title || !content || !category) return;\n//     resetHandler();\n//     history.push(\"/mylists\");\n//   };\n//   return (\n//     <MainScreen title=\"Edit List\">\n//       <Card>\n//         <Card.Header>Edit your List</Card.Header>\n//         <Card.Body>\n//           <Form onSubmit={updateHandler}>\n//             {loadingDelete && <Loading />}\n//             {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//             {errorDelete && (\n//               <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n//             )}\n//             <Form.Group controlId=\"title\">\n//               <Form.Label>Title</Form.Label>\n//               <Form.Control\n//                 type=\"title\"\n//                 placeholder=\"Enter the title\"\n//                 value={title}\n//                 onChange={(e) => setTitle(e.target.value)}\n//               />\n//             </Form.Group>\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Content</Form.Label>\n//               <Form.Control\n//                 as=\"textarea\"\n//                 placeholder=\"Enter the content\"\n//                 rows={4}\n//                 value={content}\n//                 onChange={(e) => setContent(e.target.value)}\n//               />\n//             </Form.Group>\n//             {content && (\n//               <Card>\n//                 <Card.Header>List Preview</Card.Header>\n//                 <Card.Body>\n//                   <ReactMarkdown>{content}</ReactMarkdown>\n//                 </Card.Body>\n//               </Card>\n//             )}\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Category</Form.Label>\n//               <Form.Control\n//                 type=\"content\"\n//                 placeholder=\"Enter the Category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               />\n//             </Form.Group>\n//             {loading && <Loading size={50} />}\n//             <Button variant=\"primary\" type=\"submit\">\n//               Update List\n//             </Button>\n//             <Button\n//               className=\"mx-2\"\n//               variant=\"danger\"\n//               onClick={() => deleteHandler(match.params.id)}\n//             >\n//               Delete List\n//             </Button>\n//           </Form>\n//         </Card.Body>\n//         <Card.Footer className=\"text-muted\">\n//           Updated on - {date.substring(0, 10)}\n//         </Card.Footer>\n//       </Card>\n//     </MainScreen>\n//   );\n// }\n// export default SingleList;\n\n\n_s(SingleList, \"hGQAs9aHfESWhqDAx4dfJMclwzQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SingleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleList\");","map":{"version":3,"names":["React","useEffect","useState","MainScreen","axios","Button","Card","Form","useDispatch","useSelector","deleteListAction","updateListAction","ErrorMessage","Loading","ReactMarkDown","SingleList","match","history","title","setTitle","content","setContent","category","setCategory","date","setDate","dispatch","listUpdate","state","loading","error","fetching","data","get","params","id","updatedAt","resetHandler","updateHandler","e","preventDefault","push"],"sources":["/home/basil/The_List/frontend/src/screens/SingleList/SingleList.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport {Button, Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteListAction, updateListAction } from \"../../actions/listsActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkDown from \"react-markdown\";\n\nfunction SingleList({match, history}) {\n  const [title, setTitle] = useState()\n  const [content, setContent] = useState()\n  const [category, setCategory] = useState()\n  const [date, setDate] = useState(\"\")\n\n\n  const dispatch = useDispatch();\n\n  const listUpdate = useSelector((state) => state.listUpdate);\n  const {loading, error} = listUpdate;\n\n\n  useEffect(() => {\n    const fetching = async () => {\n      const {data} = await axios.get(`/api/lists/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\nconst resetHandler = () => {\n  setTitle(\"\");\n  setCategory(\"\");\n  setContent(\"\");\n};\n\n\nconst updateHandler = (e) => {\n  e.preventDefault();\n  dispatch(updateListAction(match.params.id, title, content, category));\n  if (!title || !content || !category) return;\n  resetHandler();\n  history.push(\"/mylists\")\n};\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import MainScreen from \"../../components/MainScreen\";\n// import axios from \"axios\";\n// import { Button, Card, Form } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { deleteListAction, updateListAction } from \"../../actions/listsActions\";\n// import ErrorMessage from \"../../components/ErrorMessage\";\n// import Loading from \"../../components/Loading\";\n// import ReactMarkdown from \"react-markdown\";\n\n// function SingleList({ match, history }) {\n//   const [title, setTitle] = useState();\n//   const [content, setContent] = useState();\n//   const [category, setCategory] = useState();\n//   const [date, setDate] = useState(\"\");\n\n//   const dispatch = useDispatch();\n\n//   const listUpdate = useSelector((state) => state.listUpdate);\n//   const { loading, error } = listUpdate;\n\n//   const listDelete = useSelector((state) => state.listDelete);\n//   const { loading: loadingDelete, error: errorDelete } = listDelete;\n\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure?\")) {\n//       dispatch(deleteListAction(id));\n//     }\n//     history.push(\"/mylists\");\n//   };\n\n//   useEffect(() => {\n//     const fetching = async () => {\n//       const { data } = await axios.get(`/api/lists/${match.params.id}`);\n\n//       setTitle(data.title);\n//       setContent(data.content);\n//       setCategory(data.category);\n//       setDate(data.updatedAt);\n//     };\n\n//     fetching();\n//   }, [match.params.id, date]);\n\n//   const resetHandler = () => {\n//     setTitle(\"\");\n//     setCategory(\"\");\n//     setContent(\"\");\n//   };\n\n//   const updateHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(updateListAction(match.params.id, title, content, category));\n//     if (!title || !content || !category) return;\n\n//     resetHandler();\n//     history.push(\"/mylists\");\n//   };\n\n//   return (\n//     <MainScreen title=\"Edit List\">\n//       <Card>\n//         <Card.Header>Edit your List</Card.Header>\n//         <Card.Body>\n//           <Form onSubmit={updateHandler}>\n//             {loadingDelete && <Loading />}\n//             {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//             {errorDelete && (\n//               <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n//             )}\n//             <Form.Group controlId=\"title\">\n//               <Form.Label>Title</Form.Label>\n//               <Form.Control\n//                 type=\"title\"\n//                 placeholder=\"Enter the title\"\n//                 value={title}\n//                 onChange={(e) => setTitle(e.target.value)}\n//               />\n//             </Form.Group>\n\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Content</Form.Label>\n//               <Form.Control\n//                 as=\"textarea\"\n//                 placeholder=\"Enter the content\"\n//                 rows={4}\n//                 value={content}\n//                 onChange={(e) => setContent(e.target.value)}\n//               />\n//             </Form.Group>\n//             {content && (\n//               <Card>\n//                 <Card.Header>List Preview</Card.Header>\n//                 <Card.Body>\n//                   <ReactMarkdown>{content}</ReactMarkdown>\n//                 </Card.Body>\n//               </Card>\n//             )}\n\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Category</Form.Label>\n//               <Form.Control\n//                 type=\"content\"\n//                 placeholder=\"Enter the Category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               />\n//             </Form.Group>\n//             {loading && <Loading size={50} />}\n//             <Button variant=\"primary\" type=\"submit\">\n//               Update List\n//             </Button>\n//             <Button\n//               className=\"mx-2\"\n//               variant=\"danger\"\n//               onClick={() => deleteHandler(match.params.id)}\n//             >\n//               Delete List\n//             </Button>\n//           </Form>\n//         </Card.Body>\n\n//         <Card.Footer className=\"text-muted\">\n//           Updated on - {date.substring(0, 10)}\n//         </Card.Footer>\n//       </Card>\n//     </MainScreen>\n//   );\n// }\n\n// export default SingleList;"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,4BAAnD;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,SAASC,UAAT,OAAsC;EAAA;;EAAA,IAAlB;IAACC,KAAD;IAAQC;EAAR,CAAkB;EACpC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,EAAtC;EACA,MAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,EAAxC;EACA,MAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;EAGA,MAAMwB,QAAQ,GAAGlB,WAAW,EAA5B;EAEA,MAAMmB,UAAU,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;EACA,MAAM;IAACE,OAAD;IAAUC;EAAV,IAAmBH,UAAzB;EAGA1B,SAAS,CAAC,MAAM;IACd,MAAM8B,QAAQ,GAAG,YAAY;MAC3B,MAAM;QAACC;MAAD,IAAS,MAAM5B,KAAK,CAAC6B,GAAN,CAAW,cAAajB,KAAK,CAACkB,MAAN,CAAaC,EAAG,EAAxC,CAArB;MAEAhB,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR;MACAG,UAAU,CAACW,IAAI,CAACZ,OAAN,CAAV;MACAG,WAAW,CAACS,IAAI,CAACV,QAAN,CAAX;MACAG,OAAO,CAACO,IAAI,CAACI,SAAN,CAAP;IACD,CAPD;;IASAL,QAAQ;EACT,CAXQ,EAWN,CAACf,KAAK,CAACkB,MAAN,CAAaC,EAAd,EAAkBX,IAAlB,CAXM,CAAT;;EAaF,MAAMa,YAAY,GAAG,MAAM;IACzBlB,QAAQ,CAAC,EAAD,CAAR;IACAI,WAAW,CAAC,EAAD,CAAX;IACAF,UAAU,CAAC,EAAD,CAAV;EACD,CAJD;;EAOA,MAAMiB,aAAa,GAAIC,CAAD,IAAO;IAC3BA,CAAC,CAACC,cAAF;IACAd,QAAQ,CAACf,gBAAgB,CAACK,KAAK,CAACkB,MAAN,CAAaC,EAAd,EAAkBjB,KAAlB,EAAyBE,OAAzB,EAAkCE,QAAlC,CAAjB,CAAR;IACA,IAAI,CAACJ,KAAD,IAAU,CAACE,OAAX,IAAsB,CAACE,QAA3B,EAAqC;IACrCe,YAAY;IACZpB,OAAO,CAACwB,IAAR,CAAa,UAAb;EACD,CAND;AAUC,C,CA+BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GA5MS1B,U;UAOUP,W,EAEEC,W;;;KATZM,U"},"metadata":{},"sourceType":"module"}